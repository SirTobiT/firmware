-- This is an example site configuration for Gluon v2015.1+
--
-- Take a look at the documentation located at
-- http://gluon.readthedocs.org/ for details.
--
-- This configuration will not work as it. You're required to make
-- community specific changes to it!
{
  -- Used for generated hostnames, e.g. freifunk-abcdef123456. (optional)
  hostname_prefix = 'ME-',

  -- Name of the community.
  site_name = 'Freifunk Monheim',

  -- Shorthand of the community.
  site_code = 'ffnef-mon',

  -- Prefixes used within the mesh. Both are required.
  prefix4 = '10.1.208.0/21',
  prefix6 = '2a03:2260:122:1400::/64',

  -- Timezone of your community.
  -- See http://wiki.openwrt.org/doc/uci/system#time_zones
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',

  -- List of NTP servers in your community.
  -- Must be reachable using IPv6!
  ntp_servers = {'ntp.ffnef.de',
                '1.freifunk.pool.ntp.org',
                '2.freifunk.pool.ntp.org',
                '3.freifunk.pool.ntp.org',
		'0.freifunk.pool.ntp.org'
  },

  -- Wireless regulatory domain of your community.
  regdom = 'DE',

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 13,

    -- ESSID used for client network.
    ap = {
      ssid = 'Freifunk',
      -- disabled = true, (optional)
    },

    mesh = {
      -- Adjust these values!
      id = 'ffnef-mon-mesh',
      mcast_rate = 6000,
      -- disabled = true, (optional)
    },
  },

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except
  -- for channel.
  wifi5 = {
    channel = 44,
    ap = {
      ssid = 'Freifunk',
    },
    mesh = {
      id = 'ffnef-mon-mesh',
      mcast_rate = 6000,
    },
  },

  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  next_node = {
    -- anycast IPs of all nodes
    ip4 = '10.1.208.255',
    ip6 = '2a03:2260:122:1400::ffff',

    -- anycast MAC of all nodes
    mac = '20:24:e0:1d:ee:da',
  },

  -- Options specific to routing protocols (optional)
  -- mesh = {
    -- Options specific to the batman-adv routing protocol (optional)
    -- batman_adv = {
      -- Gateway selection class (optional)
      -- The default class 20 is based on the link quality (TQ) only,
      -- class 1 is calculated from both the TQ and the announced bandwidth
      -- gw_sel_class = 1,
    -- },
  -- },

  -- Refer to http://fastd.readthedocs.org/en/latest/ to better understand
  -- what these options do.
  fastd_mesh_vpn = {
    -- List of crypto-methods to use.
    methods = {'salsa2012+umac'},
    enabled = true,
    -- configurable = true,

    mtu = 1364,
    groups = {
      backbone = {
        limit = 1,

        -- List of peers.
        peers = {
--          peer1 = {
--            key = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
--            -- This is a list, so you might add multiple entries.
--            -- You can also omit the ipv4 to allow both connection via ipv4 and ipv6
--            remotes = {'ipv4 "xxx.somehost.invalid" port xxxxxx'},
--          },
	  fastd1_ffnef_mon_ffnef_de = {
	    key = 'efd2155bf25585788ae333bd228ec960c4ce6d100dd3c0ad5f08e88adf516059',
	    remotes = {'"fastd1.ffnef-mon.ffnef.de" port 63977'},
	  },
	  fastd2_ffnef_mon_ffnef_de = {
	    key = '65071e80af35865830c5e5014c1279bf7b7bd2bcc06b9f721137ee1f624ce4d4',
	    remotes = {'"fastd2.ffnef-mon.ffnef.de" port 63977'},
	  },
	  fastd3_ffnef_mon_ffnef_de = {
	    key = '0c3131778981c318135e0f552d747c513f0589ac9a214ad75731c8455a442c20',
	    remotes = {'"fastd3.ffnef-mon.ffnef.de" port 63977'},
	  },
	  fastd4_ffnef_mon_ffnef_de = {
	    key = 'dd43a7d1c3f893ec67f13aca90bb5be2d449e8a83e943869f240b1f99ca7297a',
	    remotes = {'"fastd4.ffnef-mon.ffnef.de" port 63977'},
	  },
	          },

        -- Optional: nested peer groups
        -- groups = {
        --   backbone_sub = {
        --     ...
        --   },
        --   ...
        -- },
      },
      -- Optional: additional peer groups, possibly with other limits
      -- backbone2 = {
      --   ...
      -- },
    },

    bandwidth_limit = {
      -- The bandwidth limit can be enabled by default here.
      enabled = false,

      -- Default upload limit (kbit/s).
      egress = 200,

      -- Default download limit (kbit/s).
      ingress = 3000,
    },
  },

  autoupdater = {
    -- Default branch. Don't forget to set GLUON_BRANCH when building!
    branch = 'stable',

    -- List of branches. You may define multiple branches.
    branches = {
      stable = {
        name = 'stable',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = { 'http://firmware.ffnef-mon.ffnef.de/firmware/stable/ffnef-mon/sysupgrade',
	    'http://firmware.ffnef-mon.ffnef/firmware/stable/ffnef-mon/sysupgrade',
	    'http://firmware.ffnef.de/firmware/stable/ffnef-mon/sysupgrade',
	    'http://[2a03:2260:122:1400::733]/firmware/stable/ffnef-mon/sysupgrade',
	},

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 2,

        -- List of public keys of maintainers.
        pubkeys = {
                'dd6a9d1aefc175f885705691498e904cbda12cc4602316f04816d78026c7c0f0', -- Benedikt Wi
		'fb919d4adc69bd404f5093ce6b43badf351f9e642ad458406be986baf6096247', -- PetaByteBoy
		'2a61930930a240c027f6ca4197203d400b6e4a32f9e92041e5f086907796c9bc', -- adorfer
		'd02f8e60fb7a5069556500694ebe512b6017b01e9950476e4cfcf10d5130c296', -- JJX
		'96d644ff1ce07d6f67d9329a0eb9a1548d0d01a3519d17ec1fe9d49da3270bfc', -- plaste
        },
      },
      beta = {
        name = 'beta',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = { 'http://firmware.ffnef-mon.ffnef.de/firmware/beta/ffnef-mon/sysupgrade',
	    'http://firmware.ffnef-mon.ffnef/firmware/beta/ffnef-mon/sysupgrade',
	    'http://firmware.ffnef.de/firmware/beta/ffnef-mon/sysupgrade',
	    'http://[2a03:2260:122:1400::733]/firmware/beta/ffnef-mon/sysupgrade',
	},

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 1,

        -- List of public keys of maintainers.
        pubkeys = {
                'dd6a9d1aefc175f885705691498e904cbda12cc4602316f04816d78026c7c0f0', -- Benedikt Wi
                'e2f48369e2bd55780908c06f2d10318f2844676c44ec3e70b4a9b8635b2a09d6', -- Benedikt Wi
		'fb919d4adc69bd404f5093ce6b43badf351f9e642ad458406be986baf6096247', -- PetaByteBoy
		'2a61930930a240c027f6ca4197203d400b6e4a32f9e92041e5f086907796c9bc', -- adorfer
		'd02f8e60fb7a5069556500694ebe512b6017b01e9950476e4cfcf10d5130c296', -- JJX
		'96d644ff1ce07d6f67d9329a0eb9a1548d0d01a3519d17ec1fe9d49da3270bfc', -- plaste
        },
      },
      experimental = {
        name = 'experimental',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = { 'http://firmware.ffnef-mon.ffnef.de/firmware/broken/ffnef-mon/sysupgrade',
	    'http://firmware.ffnef-mon.ffnef/firmware/broken/ffnef-mon/sysupgrade',
	    'http://firmware.ffnef.de/firmware/broken/ffnef-mon/images/sysupgrade',
	    'http://[2a03:2260:122:1400::733]/firmware/broken/ffnef-mon/sysupgrade'
	},

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 1,

        -- List of public keys of maintainers.
        pubkeys = {
                'dd6a9d1aefc175f885705691498e904cbda12cc4602316f04816d78026c7c0f0', -- Benedikt Wi
                'e2f48369e2bd55780908c06f2d10318f2844676c44ec3e70b4a9b8635b2a09d6', -- Benedikt Wi
		'fb919d4adc69bd404f5093ce6b43badf351f9e642ad458406be986baf6096247', -- PetaByteBoy
		'2a61930930a240c027f6ca4197203d400b6e4a32f9e92041e5f086907796c9bc', -- adorfer
		'd02f8e60fb7a5069556500694ebe512b6017b01e9950476e4cfcf10d5130c296', -- JJX
		'96d644ff1ce07d6f67d9329a0eb9a1548d0d01a3519d17ec1fe9d49da3270bfc', -- plaste
        },
      },
    },
  },


  opkg = {
	openwrt = 'http://downloads.openwrt.org/%n/%v/%S/packages',
	extra = {
	  modules = 'http://download.ffnef.de/firmware/modules/%GR/%S',
	},
  },


  roguenets_filter = {
          allowed_prefix4 = '10.1.208.0/21',
          allowed_prefix6 = '2a03:2260::/29',
          additional_prefix6 = {
                'fda0:747e::/32',
          },
  },
  dns = {
        cacheentries = 1024,
        servers = {  '2a03:2260:122:1400::3', '2001:4860:4860::8844', '2001:4860:4860::8888', },
        },

  ath9k_workaround = {
        blackout_wait = 500,
        reset_wait = 1801,
        step_size = 10,
        },

  mesh_on_lan = true,
  mesh_on_wan = false,
  poe_passthrough = true,
  setup_mode = {
                skip = true,
  },
  config_mode = {
                owner = {
                obligatory = true,
                },
  },
  authorized_keys = {
         'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDU49IyHDyxc5OU6FuMSD1dfS2YKtJ2qHcT9h42+KOXSgeLeav2H8xEtbxR8WDzqgFsWwEhU2YCjcycDDA7vLAx3mmPZKvrUPz+nC/VG6FZCqZPC0f6gQX0ue/sD/1UwcWhnTFJu9VAkMagwm0zFfXVa92QtvNc+bZmcjjZYjhJzVTqavoq+I3H0QSc+JWZX/doHyXRKK5NBBxHoFRYfJISWt2QtTisVCC2tfiJB7373PGgUTiUCVz0eIqN0sO7J/2DOEXQ8LKduXL0ainfImvUUHVr/R9yMRVFVU1MB/4L/tluyKuubmCCNACM+f8dlXZH6RSxt0/Het30If0FWCvF benedikt@dektri',
         'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDCou5LngufkCEooPj0FESsQ6b7mWvN++xeIfo6Jk8rsUGNQWTzJQgwYwQRgnBE6eFl2ZQvqe+OmGOVVjcxwdZ1cyddA4Nr4SscV4BB9cy+xEPD8CJj8bDcfH/E0IIF5s/GqcOKAtYx5RVsqtYMymg9wXqPsl4gM8w4K1BdrVZ743LeLFaaWylkfvTgTjcH0knVraUb3JYLfRhFmCqzvyFyJxQ5eCutn35Jqpvk2I0It/7GqTMJQ/JglWQU+wehozXQsoKHBsQ6ihSIn9J5vv4B+FXX07XlDAUwWocIJLPuRjIytkkERsHjgdxtywpkQby29lB//Nev+e7sPfPBu6wuBxni417ESNQ+g2vMvSLNNfJMw1tBojNSA87KynK6zH8Z0WiTX1iLe+F7nT96oxSfohg4Ktlkoi67o+UCCs7PhzN/4oXZl1gqGF9P5PNmle9YdYZ2wZFZYvjonHJsxtSayMZQ6OaHZQ6OlueCNiOR4UAHraDjv8i0xaPQEUcbuk4+3XkHNPQvl27iW+QOledcwwySWAB2VL8YUv1qe/IBSxdjRH0bawYOTFLqx0EHQ4JN5joHNIwyqzaZ+QtlHh5CO6LPa7ZY4Kb8DeninTq9Vwrp/Yd8mIxtPRMCw7C1EB7PtRbvCB8G3WVd7T8H0vVxZz3JO4k6ntTsTWw3fqJllQ== lutzwulfestieg@Lutz-Mac',
         'ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAIEAufGE6eK/iZTeLKCduy4UEyQpkXX+Z/0SAbYCbkJhJjNpYJaAaMhPI9yPWqsSJlQ9NSMVHMWF+3fTYb8uXEMFxEAXLqgYWhc7fs45FwvP7Ki9q5vZlvrKdB0MOPkQsY1sI3AEtcFwoft0uemW9QZUJ9jxBSi82BDbSZnFykv81ds= adorfer',
         'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQCvMCy/RjnGc/ppzxIqvyv3WnaQ3Tj495MLw8qV4FpTkVndjIuqrY7heW4G1W4AFV97QpwCnBTOVmL6xg8kS+zPWN8/pFbIWF1tDBBocZuIYQhOzyd4KPewgu/GXPhmDTtAqdU/MC1CL9Zmd5P+YTzTTVYvvJmLx8ZNWx1KVU9BTePF1y6ekhLduvzOfGDW4rhPhjGGeEIW15sLpM/JnlLMP0nZvbmTQQH91g3qKsabxmYPH6W/s+rTja2ds+SfrNzj4VrRRNUaNFaUo/2G/m5lr/yYTgF2bDb1D7MijMs/u0Z6cdvlOXzdESII8jgVsa942KdEiskak0cRFEDLhf7Qomjamf/fGfQyrhQeH+XBDVlPbumN5LrHpO68U9kbpRpPxX/IRlsjKG6fYj5LIOQqpfWBqvlCuAFacUcp8EglQVKlB5yuSpEcwhH4vb03z+hLQndmGkzlp2yqcM/+sDpIzeQHK58MyLXXIiNJW7cUoExqmaGSrvXl1duncpBNVEgBfCYaWA9PwnTxWOf5Ywl2Zei5W9p5G8vJSSaEV+SyxrCUl2MGbAQob01KrsgSRQ5lK1Uhjzq62ewVmUWvfu+1dy/NKwTNLofd957pd4f0BpB0wRd4c5EQDtyHyKjGT27EdzoukUdlELWBCXvt7i/W0MBco/spgL+05YqDrJJNbw== stephan@neanderfunk.de',
  },
}
