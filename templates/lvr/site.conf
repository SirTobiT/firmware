-- This is an example site configuration for Gluon v2016.2+
--
-- Take a look at the documentation located at
-- http://gluon.readthedocs.org/ for details.
--
-- This configuration will not work as it. You're required to make
-- community specific changes to it!
{
  -- Used for generated hostnames, e.g. freifunk-abcdef123456. (optional)
  hostname_prefix = 'LVR-',

  -- Name of the community.
  site_name = 'Freifunk LVR',

  -- Shorthand of the community.
  site_code = 'ffnef-lvr',

  -- Prefixes used within the mesh. Both are required.
  prefix4 = '10.2.0.0/21',
  prefix6 = 'fda0:747e:ab29:9381::/64',
  -- Timezone of your community.
  -- See http://wiki.openwrt.org/doc/uci/system#time_zones
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',

  -- List of NTP servers in your community.
  -- Must be reachable using IPv6!
  ntp_servers = {'ntp.ffnef.de',
                '1.freifunk.pool.ntp.org',
		'0.freifunk.pool.ntp.org'
  },

  -- Wireless regulatory domain of your community.
  regdom = 'DE',

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 13,

    -- ESSID used for client network.
    ap = {
      ssid = 'Freifunk',
    },

    mesh = {
      -- Adjust these values!
      id = 'ffnef-lvr-mesh',
      mcast_rate = 6000,
    },
  },

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except
  -- for channel.
  wifi5 = {
    channel = 44,
    ap = {
      ssid = 'Freifunk',
    },
    mesh = {
      id = 'ffnef-lvr-mesh',
      mcast_rate = 6000,
    },
  },

  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  next_node = {
    -- anycast IPs of all nodes
    ip4 = '10.2.0.255',
    ip6 = '2a03:2260:122:117c::ffff',
    mac = '60:a9:e7:6c:82:14',
  },

  -- Options specific to routing protocols (optional)
  -- mesh = {
    -- Options specific to the batman-adv routing protocol (optional)
    -- batman_adv = {
      -- Gateway selection class (optional)
      -- The default class 20 is based on the link quality (TQ) only,
      -- class 1 is calculated from both the TQ and the announced bandwidth
      -- gw_sel_class = 1,
    -- },
  -- },

  -- Refer to http://fastd.readthedocs.org/en/latest/ to better understand
  -- what these options do.
  fastd_mesh_vpn = {
    -- List of crypto-methods to use.
    methods = {'salsa2012+umac'},
    enabled = true,
    -- configurable = true,

    mtu = 1364,
    groups = {
      backbone = {
        limit = 1,

        -- List of peers.
        peers = {
--          peer1 = {
--            key = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
--            -- This is a list, so you might add multiple entries.
--            -- You can also omit the ipv4 to allow both connection via ipv4 and ipv6
--            remotes = {'ipv4 "xxx.somehost.invalid" port xxxxxx'},
--          },
	  fastd4_ffnef_lvr_ffnef_de = {
	    key = '951de02f3bb7190ea7e85c65d1711f1fd5aedabe40e8907d47cc7a093489fc7d',
	    remotes = {'"fastd4.ffnef-lrv.ffnef.de" port 63984'},
	  },
	  fastd1_ffnef_lvr_ffnef_de = {
	    key = '799cdf9f9afc0a90e51307be8f7382878d39e7362c357a4c270dc6f054aa502b',
	    remotes = {'"fastd1.ffnef-lvr.ffnef.de" port 63984'},
	  },
	  fastd3_ffnef_lvr_ffnef_de = {
	    key = '979b931c4c73405b32e7f05c03253bc977245cbc480c557fa241376418ba8c86',
	    remotes = {'"fastd3.ffnef-lvr.ffnef.de" port 63984'},
	  },
	  fastd2_ffnef_lvr_ffnef_de = {
	    key = 'c28fa6ddd414a46574581e6959c571cd60c53dd4fc249af6d99a6b45b65a1d1f',
	    remotes = {'"supernode.fflvr.de" port 63984'},
	  },
	          },

        -- Optional: nested peer groups
        -- groups = {
        --   backbone_sub = {
        --     ...
        --   },
        --   ...
        -- },
      },
      -- Optional: additional peer groups, possibly with other limits
      -- backbone2 = {
      --   ...
      -- },
    },

    bandwidth_limit = {
      -- The bandwidth limit can be enabled by default here.
      enabled = false,

      -- Default upload limit (kbit/s).
      egress = 500,

      -- Default download limit (kbit/s).
      ingress = 7000,
    },
  },

  autoupdater = {
    branch = 'RELBRANCH',
    branches = {
      stable = {
        name = 'stable',
        mirrors = { 
	    'http://firmware.fflvr.de/firmware/stable/ffnef-lvr/sysupgrade',
	    'http://firmware.ffnef.de/firmware/stable/ffnef-lvr/sysupgrade',
	    'http://[2a03:2260:122:1171::733]/firmware/stable/ffnef-lvr/sysupgrade',
	    'http://[2a03:2260:122:117c::733]/firmware/stable/ffnef-lvr/sysupgrade',
	    'http://[fda0:747e:ab29:9381::733]/firmware/stable/ffnef-lvr/sysupgrade'
	},
        good_signatures = 2,
        pubkeys = {
                'dd6a9d1aefc175f885705691498e904cbda12cc4602316f04816d78026c7c0f0', -- Benedikt Wi
		'fb919d4adc69bd404f5093ce6b43badf351f9e642ad458406be986baf6096247', -- PetaByteBoy
		'2a61930930a240c027f6ca4197203d400b6e4a32f9e92041e5f086907796c9bc', -- adorfer
		'd02f8e60fb7a5069556500694ebe512b6017b01e9950476e4cfcf10d5130c296', -- JJX
		'96d644ff1ce07d6f67d9329a0eb9a1548d0d01a3519d17ec1fe9d49da3270bfc', -- plaste
        },
      },
      beta = {
        name = 'beta',
        mirrors = { 
	    'http://firmware.fflvr.de/firmware/beta/ffnef-lvr/sysupgrade',
	    'http://firmware.ffnef.de/firmware/beta/ffnef-lvr/sysupgrade',
	    'http://[2a03:2260:122:1171::733]/firmware/beta/ffnef-lvr/sysupgrade',
	    'http://[2a03:2260:122:117c::733]/firmware/beta/ffnef-lvr/sysupgrade',
	    'http://[fda0:747e:ab29:9381::733]/firmware/beta/ffnef-lvr/sysupgrade'
	},

        good_signatures = 1,
        pubkeys = {
                'dd6a9d1aefc175f885705691498e904cbda12cc4602316f04816d78026c7c0f0', -- Benedikt Wi
                'e2f48369e2bd55780908c06f2d10318f2844676c44ec3e70b4a9b8635b2a09d6', -- Benedikt Wi
		'fb919d4adc69bd404f5093ce6b43badf351f9e642ad458406be986baf6096247', -- PetaByteBoy
		'2a61930930a240c027f6ca4197203d400b6e4a32f9e92041e5f086907796c9bc', -- adorfer
		'd02f8e60fb7a5069556500694ebe512b6017b01e9950476e4cfcf10d5130c296', -- JJX
		'96d644ff1ce07d6f67d9329a0eb9a1548d0d01a3519d17ec1fe9d49da3270bfc', -- plaste
        },
      },
      experimental = {
        name = 'experimental',
        mirrors = { 
	    'http://firmware.fflvr.de/firmware/broken/ffnef-lvr/sysupgrade',
	    'http://firmware.ffnef.de/firmware/broken/ffnef-lvr/sysupgrade',
	    'http://[2a03:2260:122:1171::733]/firmware/broken/ffnef-lvr/sysupgrade',
	    'http://[2a03:2260:122:117c::733]/firmware/broken/ffnef-lvr/sysupgrade',
	    'http://[fda0:747e:ab29:9381::733]/firmware/broken/ffnef-lvr/sysupgrade'
	},

        good_signatures = 1,
        pubkeys = {
                'dd6a9d1aefc175f885705691498e904cbda12cc4602316f04816d78026c7c0f0', -- Benedikt Wi
                'e2f48369e2bd55780908c06f2d10318f2844676c44ec3e70b4a9b8635b2a09d6', -- Benedikt Wi
		'fb919d4adc69bd404f5093ce6b43badf351f9e642ad458406be986baf6096247', -- PetaByteBoy
		'2a61930930a240c027f6ca4197203d400b6e4a32f9e92041e5f086907796c9bc', -- adorfer
		'd02f8e60fb7a5069556500694ebe512b6017b01e9950476e4cfcf10d5130c296', -- JJX
		'96d644ff1ce07d6f67d9329a0eb9a1548d0d01a3519d17ec1fe9d49da3270bfc', -- plaste
        },
      },
    },
  },


  opkg = {
	openwrt = 'http://downloads.openwrt.org/%n/%v/%S/packages',
	extra = {
	  modules = 'http://download.ffnef.de/firmware/modules/%GR/%S',
		},
	},
  dns = {
        cacheentries = 5000,
	servers = {  '2a03:2260:122:117c::3',  '2001:4860:4860::8844', '2001:4860:4860::8888', },
	},

  ath9k_workaround = {
        blackout_wait = 500,
        reset_wait = 1801,
        step_size = 10,
	},

  roguenets_filter = {
	allowed_prefix4 = '10.2.0.0/21',
        allowed_prefix6 = '2a03:2260:122:117c::/64',
	additional_prefix6 = {
		'fda0:747e:ab29:9381::/64',
		},
	},

  mesh_on_lan = true,
  mesh_on_wan = false,
  poe_passthrough = true,

  setup_mode = {
  	skip = false,
	},
  authorized_keys = {
	'', 
	},
}
